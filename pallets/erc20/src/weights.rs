
//! Autogenerated weights for `pallet_erc20`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 32.0.0
//! DATE: 2024-05-11, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `Giorgiis-MacBook-Pro.local`, CPU: `<UNKNOWN>`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// ./target/release/node-template
// benchmark
// pallet
// --extrinsic
// *
// --pallet
// pallet_erc20
// --steps=50
// --repeat=20
// --wasm-execution=compiled
// --template
// ./pallets/frame-weight-template.hbs
// --output
// ./pallets/erc20/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for `pallet_erc20`.
pub trait WeightInfo {
    fn transfer() -> Weight;
}

/// Weights for `pallet_erc20` using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
    /// Storage: `Erc::Balances` (r:2 w:2)
    /// Proof: `Erc::Balances` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `165`
        //  Estimated: `6105`
        // Minimum execution time: 9_000_000 picoseconds.
        Weight::from_parts(10_000_000, 6105)
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
}

// For backwards compatibility and tests.
impl WeightInfo for () {
    /// Storage: `Erc::Balances` (r:2 w:2)
    /// Proof: `Erc::Balances` (`max_values`: None, `max_size`: None, mode: `Measured`)
    fn transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `165`
        //  Estimated: `6105`
        // Minimum execution time: 9_000_000 picoseconds.
        Weight::from_parts(10_000_000, 6105)
            .saturating_add(RocksDbWeight::get().reads(2_u64))
            .saturating_add(RocksDbWeight::get().writes(2_u64))
    }
}